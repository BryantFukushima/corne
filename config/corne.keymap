/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define SYM 1
#define NAV 2
#define NUM 3
#define MED 4
#define QWT 5
#define FNC 6

&mt {
        tapping-term-ms = <400>;
};

/ {
        macros {
                line_up: line_up {
                        label = "line_up";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp UP>
                                , <&macro_release &kp LALT>
                                ;
                };
                line_down: line_down {
                        label = "line_down";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp DOWN>
                                , <&macro_release &kp LALT>
                                ;
                };
                line_left: line_left {
                        label = "line_left";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp LBKT >
                                , <&macro_release &kp LGUI>
                                ;
                };
                line_right: line_right {
                        label = "line_right";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp RBKT>
                                , <&macro_release &kp LGUI>
                                ;
                };
                copy: copy {
                        label = "copy";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp C>
                                , <&macro_release &kp LGUI>
                                ;
                };
                paste: paste {
                        label = "paste";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp V>
                                , <&macro_release &kp LGUI>
                                ;
                };
                cut: cut {
                        label = "cut";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp X>
                                , <&macro_release &kp LGUI>
                                ;
                };
                undo: undo {
                        label = "undo";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp Z>
                                , <&macro_release &kp LGUI>
                                ;
                };
                redo: redo {
                        label = "redo";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI &kp LSHFT>
                                , <&macro_tap &kp Z>
                                , <&macro_release &kp LGUI &kp LSHFT>
                                ;
                };
        };
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  "  | BKSP |
// | ESC  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  :   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | QWT  |
//       | TAB/FNC | ESC/NUM | BKSP/NAV |   | SPC/SYM | ENT/MSE  | DEL/MED |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B                       &kp J &kp L  &kp U     &kp Y   &kp SQT    &kp BSPC
   &kp ESC &hm LSHFT A &hm LALT R &hm LCTRL S &hm LGUI T &kp G   &kp M &hm RGUI N  &hm RCTRL E  &hm RALT I   &hm RSHFT O &kp SEMI
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V                       &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &to QWT
                  &lt FNC TAB &lt NUM ESC &lt NAV BSPC         &lt SYM SPACE &lt MED ENTER  &kp DEL
                        >;
                };
                symbols {
// -----------------------------------------------------------------------------------------
// |  ` |  {  |  &  |  *  |  |  |  }  |   |  none  |  none   |  none  |  none  |  none  | none |
// |  ~ |  (  |  $  |  %  |  ^  |  )  |   |  none  |  RGUI   |  RCTRL |  RALT  |  RSHFT | none |
// |  \ |  [  |  !  |  @  |  #  |  ]  |   |  none  |  none   |  none  |  none  |  none  | none |
//                        | = | _ | - |   | none | none  | none |
                        bindings = <
   &kp GRAVE  &kp LBRC &kp AMPS &kp ASTRK &kp PIPE &kp RBRC   &none &none  &none  &none  &none  &none
   &kp TILDE &kp LPAR &kp DLLR &kp PRCNT &kp CARET &kp RPAR   &none &kp RGUI  &kp RCTRL  &kp RALT   &kp RSHFT &none
   &kp BSLH &kp LBKT &kp EXCL &kp AT &kp HASH &kp RBKT        &none &none  &none  &none  &none  &none
                         &kp EQUAL &kp UNDER &kp MINUS        &none &none &none
                        >;
                };
                navigation {
// -----------------------------------------------------------------------------------------
// |  none  |  UNDO   |  none  |   UP   |  COPY  | CUT  |   |  PGUP  |  LNUP  |   UP   |  none  |  none  | none |
// |  none  |  REDO   |  LEFT  |  DOWN  |  RIGHT | PASTE|   |  LNLT  |  LEFT  |  DOWN  |  RIGHT |  LNRT  | none |
// |  none  |  none   |  none  |  none  |  none  | none |   |  PGDWN |  LNDN  |  HOME  |  END   |  none  | none |
//                                 | none | none | none |   |  SPACE | ENTER  |  DEL   |
                        bindings = <
   &none  &undo  &none  &kp UP  &copy  &cut           &kp PG_UP  &line_up  &kp UP  &none  &none  &none
   &none  &redo  &kp LEFT  &kp DOWN  &kp RIGHT  &paste     &line_left &kp LEFT  &kp DOWN  &kp RIGHT  &line_right  &none 
   &none  &kp LSHFT  &kp LALT  &kp LCTRL   &kp LGUI  &none           &kp PG_DN &line_down  &kp HOME  &kp END  &none  &none
                                        &none  &none  &none          &kp SPACE  &kp ENTER  &kp DEL
                        >;
                };
                numbers {
// -----------------------------------------------------------------------------------------
// |  none  |  none   |  none  |  none  |  none  | none |   |    +   |    7   |    8   |    9   |  none  | none |
// |  none  |  LSHFT  |  LALT  |  LCTRL |  LGUI  | none |   |    -   |    4   |    5   |    6   |  none  | none |
// |  none  |  none   |  none  |  none  |  none  | none |   |    .   |    1   |    2   |    3   |  none  | none |
//                                 | none | none | none |   |    =   |    0   |  ENTER |
                        bindings = <
   &none  &none  &none  &none  &none  &none                  &kp PLUS  &kp N7  &kp N8  &kp N9  &none  &none
   &none  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &none    &kp MINUS  &kp N4  &kp N5  &kp N6  &none  &none
   &none  &none  &none  &none  &none  &none                  &kp DOT  &kp N1  &kp N2  &kp N3  &none  &none
                                &none  &none  &none          &kp EQUAL  &kp N0  &kp ENTER
                        >;
                };
                media {
// -----------------------------------------------------------------------------------------
// |  none  |  none   |  none  |  none  |  VOLUP | none |   |  none  |  none   |  none  |  none  |  none  | none |
// |  none  |  none   |  none  |  none  |  VOLDN | none |   |  none  |  none   |  none  |  none  |  none  | none |
// |  none  |  none   |  none  |  none  |  MUTE  | none |   |  none  |  none   |  none  |  none  |  none  | none |
//                                 | BACK | FWD  | PLAY |   | none | none  | none |
                        bindings = <
   &none  &none  &none  &none  &kp K_VOL_UP  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none  &none  &kp K_VOL_DN  &none    &none  &none  &none  &none  &none  &none
   &none  &none  &none  &none  &kp K_MUTE   &none    &none  &none  &none  &none  &none  &none
                        &kp K_PREV  &kp K_NEXT  &kp K_PP    &none  &none  &none
                        >;
                };
                qwerty {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | QWT  |
//       | TAB/FNC | ESC/NUM | BKSP/NAV |   | SPC/SYM | ENT/MSE  | DEL/MED |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC &hm LSHFT A &hm LALT S &hm LCTRL D &hm LGUI F &kp G   &kp H &hm RGUI J  &hm RCTRL K  &hm RALT L   &hm RSHFT SEMI &kp SQT 
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &to DEF
                  &lt FNC SPACE &lt NUM ESC &lt NAV BSPC         &lt SYM SPACE &lt MED ENTER  &kp DEL
                        >;
                };
                functions {
// -----------------------------------------------------------------------------------------
// |  RSET  |  none   |  none  |  none  |  none  | none |   |  none  |   F7    |   F8   |   F9   |   F10  | none |
// |  none  |  LSHFT  |  LALT  |  LCTRL |  LGUI  | none |   |  none  |   F4    |   F5   |   F6   |   F11  | none |
// |  none  |  none   |  none  |  none  |  none  | none |   |  none  |   F1    |   F2   |   F3   |   F12  | none |
//                                 | none | none | none |   | none | none  | none |
                        bindings = <
   &kp C_RESET  &none  &none  &none  &none  &none                  &none  &kp F7  &kp F8  &kp F9  &kp F10  &none
   &none  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &none          &none  &kp F4  &kp F5  &kp F6  &kp F11  &none
   &none  &none  &none  &none  &none  &none                        &none  &kp F1  &kp F2  &kp F3  &kp F12  &none
                        &none  &none  &none                        &none  &none  &none
                        >;
                };
        };
};
